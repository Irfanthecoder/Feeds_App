{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Documents/Feeds_App/frontend/src/components/feeds/feeds.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feeds() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\n\n  useEffect(() => {\n    if (!userId) {\n      navigate('/login'); // Redirect to login if no userId\n      return;\n    }\n    fetchPosts();\n  }, []);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const handlePostCreate = async e => {\n    e.preventDefault();\n    if (!userId) {\n      console.error('Missing user ID for creating post.');\n      return; // Exit if userId is missing\n    }\n    try {\n      const response = await axios.post('http://localhost:3001/posts', {\n        post_title: newPost,\n        user_id: userId\n      });\n      if (response.status === 200) {\n        // Assuming success status code is 200\n        setNewPost('');\n        fetchPosts();\n      } else {\n        console.error('Error creating post:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostCreate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Post\",\n        value: newPost,\n        onChange: e => setNewPost(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.post_title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Posted by: \", post.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date: \", post.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Feeds, \"VvIsMd0g8/cWli3+idGbYxHNzmI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Feeds;\nexport default Feeds;\nvar _c;\n$RefreshReg$(_c, \"Feeds\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","Feeds","_s","posts","setPosts","newPost","setNewPost","location","navigate","userId","localStorage","getItem","fetchPosts","response","get","data","error","console","handlePostCreate","e","preventDefault","post","post_title","user_id","status","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","username","date","id","_c","$RefreshReg$"],"sources":["/home/neosoft/Documents/Feeds_App/frontend/src/components/feeds/feeds.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nfunction Feeds() {\n  const [posts, setPosts] = useState([]);\n  const [newPost, setNewPost] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const userId = localStorage.getItem('userId'); // Retrieve userId from localStorage\n\n  useEffect(() => {\n    if (!userId) {\n      navigate('/login'); // Redirect to login if no userId\n      return;\n    }\n    fetchPosts();\n  }, []);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  const handlePostCreate = async (e) => {\n    e.preventDefault();\n\n    if (!userId) {\n      console.error('Missing user ID for creating post.');\n      return; // Exit if userId is missing\n    }\n\n    try {\n      const response = await axios.post('http://localhost:3001/posts', {\n        post_title: newPost,\n        user_id: userId,\n      });\n\n      if (response.status === 200) { // Assuming success status code is 200\n        setNewPost('');\n        fetchPosts();\n      } else {\n        console.error('Error creating post:', response.data.message);\n      }\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Create Post</h2>\n      <form onSubmit={handlePostCreate}>\n        <input\n          type=\"text\"\n          placeholder=\"New Post\"\n          value={newPost}\n          onChange={(e) => setNewPost(e.target.value)}\n        />\n        <button type=\"submit\">Create Post</button>\n      </form>\n\n      <h2>All Posts</h2>\n      {posts.map((post) => (\n        <div key={post.id}>\n          <h3>{post.post_title}</h3>\n          <p>Posted by: {post.username}</p>\n          <p>Date: {post.date}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Feeds;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}