{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Documents/Feeds_App/frontend/src/components/feeds/feeds.jsx\",\n  _s = $RefreshSig$();\n// Feeds.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Login from '../login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feeds() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (loggedIn) {\n      fetchPosts();\n    }\n  }, [loggedIn]);\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/posts');\n      setPosts(response.data);\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const handleLogin = () => {\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Feeds App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.post_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Posted by: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", post.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Feeds, \"KgmxDvHI/0FqesrKAgsMwnAqdAg=\");\n_c = Feeds;\nexport default Feeds;\nvar _c;\n$RefreshReg$(_c, \"Feeds\");","map":{"version":3,"names":["React","useState","useEffect","axios","Login","jsxDEV","_jsxDEV","Feeds","_s","loggedIn","setLoggedIn","posts","setPosts","fetchPosts","response","get","data","error","console","handleLogin","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","map","post","index","post_title","username","date","_c","$RefreshReg$"],"sources":["/home/neosoft/Documents/Feeds_App/frontend/src/components/feeds/feeds.jsx"],"sourcesContent":["// Feeds.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Login from '../login';\n\nfunction Feeds() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        if (loggedIn) {\n            fetchPosts();\n        }\n    }, [loggedIn]);\n\n    const fetchPosts = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/posts');\n            setPosts(response.data);\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    const handleLogin = () => {\n        setLoggedIn(true);\n    };\n\n    return (\n        <div>\n            {!loggedIn ? (\n                <Login onLogin={handleLogin} />\n            ) : (\n                <div>\n                    <h1>Feeds App</h1>\n                    <h2>All Posts</h2>\n                    {posts.map((post, index) => (\n                        <div key={index}>\n                            <h3>{post.post_title}</h3>\n                            <p>Posted by: {post.username}</p>\n                            <p>Date: {post.date}</p>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Feeds;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MACVI,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6B,CAAC;MAC/DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACtBT,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACIJ,OAAA;IAAAc,QAAA,EACK,CAACX,QAAQ,gBACNH,OAAA,CAACF,KAAK;MAACiB,OAAO,EAAEF;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/BnB,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBnB,OAAA;QAAAc,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjBd,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBtB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAKO,IAAI,CAACE;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BnB,OAAA;UAAAc,QAAA,GAAG,aAAW,EAACO,IAAI,CAACG,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCnB,OAAA;UAAAc,QAAA,GAAG,QAAM,EAACO,IAAI,CAACI,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHlBG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACjB,EAAA,CA1CQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AA4Cd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}